#ifndef GAMEPLAY_INPUT_ID_H
#define GAMEPLAY_INPUT_ID_H

typedef enum key_id {
    // TODO: DFGame Keys
    K_INVALID = -1,
    K_SPACE,
    K_APOSTROPHE,
    K_COMMA,
    K_MINUS,
    K_PERIOD,
    K_FORWARD_SLASH,
    K_0,
    K_1,
    K_2,
    K_3,
    K_4,
    K_5,
    K_6,
    K_7,
    K_8,
    K_9,
    K_SEMICOLON,
    K_EQUALS,
    K_A,
    K_B,
    K_C,
    K_D,
    K_E,
    K_F,
    K_G,
    K_H,
    K_I,
    K_J,
    K_K,
    K_L,
    K_M,
    K_N,
    K_O,
    K_P,
    K_Q,
    K_R,
    K_S,
    K_T,
    K_U,
    K_V,
    K_W,
    K_X,
    K_Y,
    K_Z,
    K_LEFT_SQUARE_BRACKET,
    K_BACK_SLASH,
    K_RIGHT_SQUARE_BRACKET,
    K_GRAVE,
    K_INSERT,
    K_DELETE,
    K_HOME,
    K_END,
    K_PAGE_UP,
    K_PAGE_DOWN,
    K_ESCAPE,
    K_BACKSPACE,
    K_ENTER,
    K_TAB,
    K_LEFT,
    K_RIGHT,
    K_UP,
    K_DOWN,
    K_F1,
    K_F2,
    K_F3,
    K_F4,
    K_F5,
    K_F6,
    K_F7,
    K_F8,
    K_F9,
    K_F10,
    K_F11,
    K_F12,
    K_LEFT_SHIFT,
    K_LEFT_CONTROL,
    K_LEFT_ALT,
    K_RIGHT_SHIFT,
    K_RIGHT_CONTROL,
    K_RIGHT_ALT,
    K_LAST = K_RIGHT_ALT
} key_id;

typedef enum mouse_button_id {
    MB_INVALID = -1,
    MB_LEFT,
    MB_MIDDLE,
    MB_RIGHT,
    // TODO: Extra numbered buttons, for the mice that have them
    MB_SCROLL_UP,
    MB_SCROLL_DOWN,
    MB_SCROLL_LEFT,
    MB_SCROLL_RIGHT,
    MB_LAST = MB_SCROLL_RIGHT
} mouse_button_id;

typedef enum cursor_mode {
    CM_ENABLED,
    CM_HIDDEN,
    CM_DISABLED
} cursor_mode;

#endif
