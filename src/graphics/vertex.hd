#ifndef DF_GRAPHICS_VERTEX_D
#define DF_GRAPHICS_VERTEX_D

#include "core/types.h"
#include "math/vector.h"

#include <GL/glew.h>
#include <GL/gl.h>

// Bitmask enum for defining the contents of vertex buffer
typedef enum vertex_types
{
    VT_POSITION = 1 << 0,
    VT_NORMAL = 1 << 1,
    VT_TEXTURE = 1 << 2,
    VT_COLOR = 1 << 3,
} vertex_types;

// Vertex with just positional information
typedef struct vt_p
{
    union {
        vec3 position;
        float data[3];
    };
}
vt_p;

// Vertex with position and normals
typedef struct vt_pn
{
    union {
        struct{
            vec3 position;
            vec3 normal;
        };
        float data[6];
    };
}
vt_pn;

// Vertex with position and texture coordinates
typedef struct vt_pt
{
    union {
        struct {
            vec3 position;
            vec2 uv;
        };
        float data[5];
    };
}
vt_pt;

// Vertex with position, normals, and texture coordinates
typedef struct vt_pnt
{
    union {
        struct {
            vec3 position;
            vec3 normal;
            vec2 uv;
        };
        float data[8];
    };
}
vt_pnt;

// Vertex with position and vertex color
typedef struct vt_pc
{
    union {
        struct {
            vec3 position;
            vec4 color;
        };
        float data[7];
    };
}
vt_pc;

// Vertex with position, normals, and vertex color
typedef struct vt_pnc
{
    union {
        struct {
            vec3 position;
            vec3 normal;
            vec4 color;
        };
        float data[10];
    };
}
vt_pnc;

// Vertex with position, texture coordinates, and vertex color
typedef struct vt_ptc
{
    union {
        struct {
            vec3 position;
            vec2 uv;
            vec4 color;
        };
        float data[9];
    };
}
vt_ptc;

// Vertex with position, normals, texture coordinates, and vertex color
typedef struct vt_pntc
{
    union {
        struct {
            vec3 position;
            vec3 normal;
            vec2 uv;
            vec4 color;
        };
        float data[12];
    };
}
vt_pntc;

#endif
