/* dfgame-editor-front.h generated by valac 0.30.1, the Vala compiler, do not modify */


#ifndef __SRC_DFGAME_EDITOR_FRONT_H__
#define __SRC_DFGAME_EDITOR_FRONT_H__

#include <glib.h>
#include <gtk/gtk.h>
#include <stdlib.h>
#include <string.h>
#include <glib-object.h>
#include <gee.h>
#include <gio/gio.h>

G_BEGIN_DECLS


#define TYPE_RESOURCE_SELECTOR (resource_selector_get_type ())
#define RESOURCE_SELECTOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_RESOURCE_SELECTOR, ResourceSelector))
#define RESOURCE_SELECTOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_RESOURCE_SELECTOR, ResourceSelectorClass))
#define IS_RESOURCE_SELECTOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_RESOURCE_SELECTOR))
#define IS_RESOURCE_SELECTOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_RESOURCE_SELECTOR))
#define RESOURCE_SELECTOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_RESOURCE_SELECTOR, ResourceSelectorClass))

typedef struct _ResourceSelector ResourceSelector;
typedef struct _ResourceSelectorClass ResourceSelectorClass;
typedef struct _ResourceSelectorPrivate ResourceSelectorPrivate;

#define TYPE_RESOURCE_ENTRY (resource_entry_get_type ())
#define RESOURCE_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_RESOURCE_ENTRY, ResourceEntry))
#define RESOURCE_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_RESOURCE_ENTRY, ResourceEntryClass))
#define IS_RESOURCE_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_RESOURCE_ENTRY))
#define IS_RESOURCE_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_RESOURCE_ENTRY))
#define RESOURCE_ENTRY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_RESOURCE_ENTRY, ResourceEntryClass))

typedef struct _ResourceEntry ResourceEntry;
typedef struct _ResourceEntryClass ResourceEntryClass;

#define TYPE_RESOURCE_MODEL (resource_model_get_type ())
#define RESOURCE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_RESOURCE_MODEL, ResourceModel))
#define RESOURCE_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_RESOURCE_MODEL, ResourceModelClass))
#define IS_RESOURCE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_RESOURCE_MODEL))
#define IS_RESOURCE_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_RESOURCE_MODEL))
#define RESOURCE_MODEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_RESOURCE_MODEL, ResourceModelClass))

typedef struct _ResourceModel ResourceModel;
typedef struct _ResourceModelClass ResourceModelClass;
typedef struct _ResourceModelPrivate ResourceModelPrivate;
typedef struct _ResourceEntryPrivate ResourceEntryPrivate;

struct _ResourceSelector {
	GtkBox parent_instance;
	ResourceSelectorPrivate * priv;
};

struct _ResourceSelectorClass {
	GtkBoxClass parent_class;
};

struct _ResourceModel {
	GObject parent_instance;
	ResourceModelPrivate * priv;
};

struct _ResourceModelClass {
	GObjectClass parent_class;
};

struct _ResourceEntry {
	GObject parent_instance;
	ResourceEntryPrivate * priv;
	gchar* path;
	gchar* name;
};

struct _ResourceEntryClass {
	GObjectClass parent_class;
};


GType resource_selector_get_type (void) G_GNUC_CONST;
ResourceSelector* resource_selector_new (const gchar* display_title, const gchar* desired_extension, gboolean should_allow_multiple, gboolean show_cancel);
ResourceSelector* resource_selector_construct (GType object_type, const gchar* display_title, const gchar* desired_extension, gboolean should_allow_multiple, gboolean show_cancel);
GType resource_entry_get_type (void) G_GNUC_CONST;
ResourceEntry* resource_selector_get_selected (ResourceSelector* self);
GeeArrayList* resource_selector_get_selected_full (ResourceSelector* self);
void resource_selector_add_extension (ResourceSelector* self, const gchar* ext);
void resource_selector_generate_list (ResourceSelector* self);
GType resource_model_get_type (void) G_GNUC_CONST;
ResourceModel* resource_model_new (void);
ResourceModel* resource_model_construct (GType object_type);
GObject* resource_model_get_object (ResourceModel* self, guint position);
void resource_model_append (ResourceModel* self, GFile* f);
ResourceEntry* resource_entry_new (GFile* file);
ResourceEntry* resource_entry_construct (GType object_type, GFile* file);
ResourceEntry* resource_entry_new_from_entry (const gchar* inpath, const gchar* inname, gboolean new_file);
ResourceEntry* resource_entry_construct_from_entry (GType object_type, const gchar* inpath, const gchar* inname, gboolean new_file);
gchar* resource_entry_construct_path (ResourceEntry* self);
GFile* resource_entry_construct_file (ResourceEntry* self);


G_END_DECLS

#endif
